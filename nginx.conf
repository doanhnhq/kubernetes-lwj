upstream api {
    server 127.0.0.1:7001;
}
server {
    listen       80;
    server_name  caizhi.ren.tls;
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        proxy_pass http://api;
        proxy_set_header     Host     $host;
        proxy_set_header     X-Real-IP     $remote_addr;
        proxy_set_header     X-Forwarded-For     $proxy_add_x_forwarded_for;
    }
    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}#

docker run -d -p 7001:7001 -e EGG_SERVER_ENV=prod -e LAST_RESTART_TIME=1569771654515 registry.cn-shenzhen.aliyuncs.com/caizhi/caizhi_backend:v2.0.7
docker run -d -p 8081:80 -p 8082:81  registry.cn-shenzhen.aliyuncs.com/caizhi/caizhi-pc:v1.5.2
docker run -d -p 8080:80 registry.cn-shenzhen.aliyuncs.com/caizhi/caizhi-admin:v1.4.7

upstream api {
    server 127.0.0.1:7001;
}

upstream admin {
    server 127.0.0.1:8080;
}

upstream pc-www {
    server 127.0.0.1:8081;
}

upstream pc-short {
    server 127.0.0.1:8082;
}

server {
        listen 80;
        server_name admin.caizhi.ren;
        return 301 https://$host$request_uri;
}

server {
        server_name admin.caizhi.ren;
        listen 443 ssl;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_certificate secret/caizhi.ren.tls.crt;
        ssl_certificate_key secret/caizhi.ren.tls.key;
        location ^~ / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://admin;
        }

    }
server {
        listen 80;
        server_name www.caizhi.ren;
        return 301 https://$host$request_uri;
}

server {
        server_name www.caizhi.ren;
        listen 443 ssl;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_certificate secret/caizhi.ren.tls.crt;
        ssl_certificate_key secret/caizhi.ren.tls.key;
        location ^~ / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://pc-www;
        }
    }

server {
        listen 80;
        server_name s.caizhi.ren;
        return 301 https://$host$request_uri;
}

server {
        server_name s.caizhi.ren;
        listen 443 ssl;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_certificate secret/caizhi.ren.tls.crt;
        ssl_certificate_key secret/caizhi.ren.tls.key;
        location ^~ / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://pc-short;
        }

    }

server {
        listen 80;
        server_name api.caizhi.ren;
        return 301 https://$host$request_uri;
}

server {
        server_name api.caizhi.ren;
        listen 443 ssl;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_certificate secret/caizhi.ren.tls.crt;
        ssl_certificate_key secret/caizhi.ren.tls.key;
        location ^~ / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://api;
        }

        location /ws {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }