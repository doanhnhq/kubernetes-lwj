---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: canal
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: canal
    spec:
      containers:
      - name: canal
        image: justliu/canal:1.0.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /app/canal-deployer/conf/example/instance.properties
          subPath: instance.properties
          name: config-deployer-instance
        - mountPath: /app/canal-adapter/conf/application.yml
          subPath: application.yml
          name: config-adapter-application
          # 挂载在es目录下，多yml多任务
        - mountPath: /app/canal-adapter/conf/es/bt-course.yml
          subPath: bt-course.yml
          name: config-adapter-es-course
        - mountPath: /app/canal-adapter/conf/es/pte-question.yml
          subPath: pte-question.yml
          name: config-adapter-es-pte
      volumes:
      - name: config-deployer-instance
        configMap:
          name: canal-deployer-instance
          items:
          - key: instance.properties
            path: instance.properties
      - name: config-adapter-application
        configMap:
          name: canal-adapter-application
          items:
          - key: application.yml
            path: application.yml
      # 以下为es配置，需要添加新es任务时
      - name: config-adapter-es-course
        configMap:
          name: canal-adapter-es-course
          items:
          - key: bt-course.yml
            path: bt-course.yml
      - name: config-adapter-es-pte
        configMap:
          name: canal-adapter-es-pte
          items:
          - key: pte-question.yml
            path: pte-question.yml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-deployer-instance
  labels:
    app: canal
data:
  instance.properties: |
    #################################################
    ## mysql serverId , v1.0.26+ will autoGen
    # canal.instance.mysql.slaveId=0
    # enable gtid use true/false
    canal.instance.gtidon=false
    # position info
    canal.instance.master.address=120.78.249.137:3306
    canal.instance.master.journal.name=
    canal.instance.master.position=
    canal.instance.master.timestamp=
    canal.instance.master.gtid=
    # rds oss binlog
    canal.instance.rds.accesskey=
    canal.instance.rds.secretkey=
    canal.instance.rds.instanceId=
    # table meta tsdb info
    canal.instance.tsdb.enable=true
    #canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb
    #canal.instance.tsdb.dbUsername=canal
    #canal.instance.tsdb.dbPassword=canal
    #canal.instance.standby.address =
    #canal.instance.standby.journal.name =
    #canal.instance.standby.position =
    #canal.instance.standby.timestamp =
    #canal.instance.standby.gtid=
    # username/password
    canal.instance.dbUsername=canal
    canal.instance.dbPassword=canal
    canal.instance.connectionCharset = UTF-8
    # enable druid Decrypt database password
    canal.instance.enableDruid=false
    #canal.instance.pwdPublicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALK4BUxdDltRRE5/zXpVEVPUgunvscYFtEip3pmLlhrWpacX7y7GCMo2/JM6LeHmiiNdH1FWgGCpUfircSwlWKUCAwEAAQ==
    # table regex
    # canal.instance.filter.regex=.*\\..*
    canal.instance.filter.regex=btclass.course,btclass.open_course,db_pte.question
    # table black regex
    canal.instance.filter.black.regex=
    # table field filter(format: schema1.tableName1:field1/field2,schema2.tableName2:field1/field2)
    #canal.instance.filter.field=test1.t_product:id/subject/keywords,test2.t_company:id/name/contact/ch
    # table field black filter(format: schema1.tableName1:field1/field2,schema2.tableName2:field1/field2)
    #canal.instance.filter.black.field=test1.t_product:subject/product_image,test2.t_company:id/name/contact/ch
    # mq config
    canal.mq.topic=example
    # dynamic topic route by schema or table regex
    #canal.mq.dynamicTopic=mytest1.user,mytest2\\..*,.*\\..*
    canal.mq.partition=0
    # hash partition config
    #canal.mq.partitionsNum=3
    #canal.mq.partitionHash=test.table:id^name,.*\\..*
    #################################################

---
# gitlab内部环境配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-adapter-application
  labels:
    app: canal
data:
  application.yml: |
    server:
      port: 8081
    spring:
      jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    canal.conf:
      mode: tcp # kafka rocketMQ
      canalServerHost: 127.0.0.1:11111
    #  zookeeperHosts: slave1:2181
    #  mqServers: 127.0.0.1:9092 #or rocketmq
    #  flatMessage: true
      batchSize: 500
      syncBatchSize: 1000
      retries: 0
      timeout:
      accessKey:
      secretKey:
      srcDataSources:
        mysql-btclass:
          url: jdbc:mysql://120.78.249.137:3306/btclass?useUnicode=true
          username: developer
          password: developer123456
        mysql-pte:
          url: jdbc:mysql://120.78.249.137:3306/db_pte?useUnicode=true
          username: developer
          password: developer123456
      canalAdapters:
      - instance: example # canal instance Name or mq topic name
        groups:
        - groupId: bt-search
          outerAdapters:
          - name: logger
    #      - name: rdb
    #        key: mysql1
    #        properties:
    #          jdbc.driverClassName: com.mysql.jdbc.Driver
    #          jdbc.url: jdbc:mysql://127.0.0.1:3306/mytest2?useUnicode=true
    #          jdbc.username: root
    #          jdbc.password: 121212
    #      - name: rdb
    #        key: oracle1
    #        properties:
    #          jdbc.driverClassName: oracle.jdbc.OracleDriver
    #          jdbc.url: jdbc:oracle:thin:@localhost:49161:XE
    #          jdbc.username: mytest
    #          jdbc.password: m121212
    #      - name: rdb
    #        key: postgres1
    #        properties:
    #          jdbc.driverClassName: org.postgresql.Driver
    #          jdbc.url: jdbc:postgresql://localhost:5432/postgres
    #          jdbc.username: postgres
    #          jdbc.password: 121212
    #          threads: 1
    #          commitSize: 3000
    #      - name: hbase
    #        properties:
    #          hbase.zookeeper.quorum: 127.0.0.1
    #          hbase.zookeeper.property.clientPort: 2181
    #          zookeeper.znode.parent: /hbase
          - name: es
            hosts: es-api.bt-tp.group:80 # 127.0.0.1:9200 for rest mode
            properties:
              mode: rest # or rest
              # security.auth: test:123456 #  only used for rest mode
              cluster.name: docker-cluster

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-adapter-es-course
  labels:
    app: canal
data:
  bt-course.yml: |
    dataSourceKey: mysql-btclass
    destination: example
    groupId: bt-search
    esMapping:
      _index: btclass-course
      _type: _doc
      _id: id
      sql: "select id, title, subtitle, price from course"
      commitBatch: 3000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: canal-adapter-es-pte
  labels:
    app: canal
data:
  pte-question.yml: |
    dataSourceKey: mysql-pte
    destination: example
    groupId: bt-search
    esMapping:
      _index: pte-question
      _type: _doc
      _id: id
      sql: "select id, id as idStr, type, code, title, stem, isHigh, isNew, isMachine, status, createdAt, updatedAt, deletedAt from question"
      commitBatch: 3000